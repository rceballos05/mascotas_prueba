@using SistemaVeterinario.Backend.Interfaces
@using SistemaVeterinario.Web.Statics
@inject MascotaNavigationData mascotaNavigationData
@inject EmpresaSeleccionadaNavigationData empresaData
@inject UserNavgationData userLoged
@inject IMascotaRepository mascotaRepository
@inject IPropietarioRepository propietarioRepository
@inject IEspecialistaRepository especialistaRepository
@inject IRazaRepository razaRepository
@inject IDatosTributariosRepository datosTributariosRepository

<SistemaVeterinario.Components.Components.Componentes_Globales.ModalAyuda Show="@ShowPrint" Title="Imprimiendo" ShowChanged="@(value => ShowPrint = value)">
    <SistemaVeterinario.Components.Components.Componentes_Globales.ImprimirCertSalud Glosa1="@Glosa1" Glosa2="@Glosa2" MaeEmpresasDatos="MaeEmpresasDatos" Mascota="Mascotas" Propietario="Propietario" Especialista="Medico" />
</SistemaVeterinario.Components.Components.Componentes_Globales.ModalAyuda>
<style>
    .info-table {
        width: 100%;
        border-collapse: collapse;
    }

        .info-table td {
            padding: 5px;
            border: 1px solid #ddd;
            font-size: 13px;
        }

            .info-table td:first-child {
                background-color: #00b0f0;
                color: white;
                font-weight: bold;
                width: 150px;
            }

        .info-table tr:nth-child(even) td:not(:first-child) {
            background-color: #f2f2f2;
        }
    body {
    background-color: #f0f0f0;
    font-family: Arial, sans-serif;
    font-size: 14px;
    }

    .window-container {
    border: 1px solid #999;
    border-radius: 3px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
    background-color: #f0f0f0;
    max-width: 1200px;
    margin: 20px auto;
    }

    .window-header {
    background: linear-gradient(to bottom, #e6e6e6, #cccccc);
    border-bottom: 1px solid #999;
    padding: 5px 10px;
    display: flex;
    align-items: center;
    }

    .window-title {
    font-weight: bold;
    color: #333;
    margin-left: 5px;
    }

    .window-controls {
    margin-left: auto;
    }

    .window-button {
    background: linear-gradient(to bottom, #f5f5f5, #e6e6e6);
    border: 1px solid #999;
    width: 24px;
    height: 24px;
    font-size: 12px;
    margin-left: 2px;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    }

    .progress-bar {
    height: 20px;
    background-color: #007bff;
    }

    .section-header {
    background-color: #d8d8f0;
    color: #000;
    padding: 10px;
    font-weight: bold;
    font-size: 14px;
    border: 1px solid #b8c7dc;
    }

    .form-section {
    background-color: #d8d8f0;
    border: 1px solid #b8c7dc;
    padding: 10px;
    margin-bottom: 10px;
    }

    .form-control, .form-select {
    height: 30px;
    padding: 2px 8px;
    font-size: 13px;
    background-color: #f8f8f8;
    }

    .form-label {
    font-size: 13px;
    margin-bottom: 0;
    padding-top: 5px;
    }

    .btn-action {
    background-color: #f8f9fa;
    border: 1px solid #ddd;
    padding: 10px;
    display: flex;
    align-items: center;
    width: 100%;
    justify-content: center;
    margin-bottom: 10px;
    }

    .btn-action i {
    margin-right: 10px;
    font-size: 20px;
    }

    .btn-generate i {
    color: #0066cc;
    }

    .btn-print i {
    color: #0066cc;
    }

    .footer-info {
    font-size: 12px;
    color: #0066cc;
    padding: 5px;
    border-top: 1px solid #ddd;
    }

    .paw-container {
    background-color: #f0f0f0;
    border: 1px solid #ddd;
    padding: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 120px;
    width: 200px;
    }

    .document-area {
    background-color: #f8f8f8;
    border: 1px solid #ddd;
    padding: 15px;
    margin-bottom: 10px;
    min-height: 150px;
    }

    .age-badge {
    background-color: #f0f0f0;
    border: 1px solid #ddd;
    padding: 2px 5px;
    border-radius: 3px;
    font-size: 12px;
    margin-left: 5px;
    }
</style>

<div class="container-fluid">
    <!-- Window Header -->


    <!-- Progress Bar -->
    <div class="progress">
        <div class="progress-bar" role="progressbar" style="width: 15%"></div>
    </div>

    <div class="container-fluid p-2">
        <div class="row">
            <!-- Facility Data Section -->
            <div class="col-md-5">
                <div class="section-header">Datos del Recinto</div>
                <div class="form-section">
                    <div class="row mb-2">
                        <div class="col-md-3">
                            <label class="form-label">Recinto</label>
                        </div>
                        <div class="col-md-9">
                            <select class="form-select" @onchange="ChangeEventMedico">
                                <option>Seleccionar</option>
                                @if(Medicos.Count > 0)
                                {
                                    foreach(SeguUsuarios item in Medicos)
                                    {
                                        <option value="@item.Codigoprofesional">@item.Nombre</option>
                                    }
                                }

                            </select>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <label class="form-label">Fecha</label>
                        </div>
                        <div class="col-md-9">
                            <input type="text" class="form-control" value="@DateTime.Now.ToString("dd-MM-yyyy")" readonly>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Pet Data Section -->
            <div class="col-md-7">
                <div class="section-header">Datos de Mascota</div>
                <div class="form-section">
                    <div class="row mb-2">
                        <div class="col-md-2">
                            <label class="form-label">Mascota</label>
                        </div>
                        <div class="col-md-3">
                            <input type="text" class="form-control" value="@Mascotas.IdMascota" readonly>
                        </div>
                        <div class="col-md-5">
                            <input type="text" class="form-control" value="@Mascotas.NombreMascota" readonly>
                        </div>
                        <div class="col-md-2">
                            <span class="age-badge">@Edad</span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-2">
                            <label class="form-label">Cliente</label>
                        </div>
                        <div class="col-md-3">
                            <input type="text" class="form-control" value="@RutFormato" readonly>
                        </div>

                        <div class="col-md-6">
                            <input type="text" class="form-control" value="@Propietario.Nombre" readonly>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mt-2">
            <!-- Document Data Section -->
            <div class="col-md-9">
                <div class="section-header">Datos del Documento</div>
                <div class="form-section">
                    <div class="row">
                        <div class="col-md-3">
                            <div class="paw-container">
                                <svg width="100" height="100" viewBox="0 0 100 100">
                                    <path d="M50,98 C35,98 20,90 20,80 C20,72 30,68 40,68 C45,68 55,68 60,68 C70,68 80,72 80,80 C80,90 65,98 50,98 Z" fill="#4CAF50" />
                                    <ellipse cx="30" cy="40" rx="15" ry="20" fill="#4CAF50" />
                                    <ellipse cx="70" cy="40" rx="15" ry="20" fill="#4CAF50" />
                                    <ellipse cx="20" cy="65" rx="12" ry="15" fill="#4CAF50" />
                                    <ellipse cx="80" cy="65" rx="12" ry="15" fill="#4CAF50" />
                                </svg>
                            </div>
                        </div>
                        <div class="col-md-9">
                            <div class="document-area">
                                <div id="certificateContent">
                                    <p>
                                        @Glosa1
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="document-area mt-3">
                        <div id="additionalInfo">
                            <p>@Glosa2</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Action Buttons -->
            <div class="col-md-3">
                <div class="form-section" style="height: 100%;">
                    <button class="btn-action btn-generate" @onclick="GeneraGlosas">
                        <i class="fa fa-search"></i>
                        Generar Glosas
                    </button>
                    <button class="btn-action btn-print" @onclick="Imprimir">
                        <i class="fa fa-print"></i>
                        Imprimir Informe
                    </button>
                </div>
            </div>
        </div>

        <!-- Footer -->
        <div class="footer-info">
            CLINICA VETERINARIA ARAUCANIA / Usuario Conectado: EDUVERGARA
        </div>
    </div>
</div>

@code {
    string Glosa1 = "";
    string Glosa2 = "";
    private SeguUsuarios Medico = new();
    private MaeEmpresasDatos MaeEmpresasDatos = new();
    private MascotasDto Mascotas = new();
    private Propietario Propietario = new();
    private List<SeguUsuarios> Medicos = new();
    private string Edad ="";
    private string RutFormato = "";
    private bool ShowPrint = false;
    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(mascotaNavigationData.IdMascota) && !string.IsNullOrEmpty(mascotaNavigationData.RutCliente))
        {

            var result = await mascotaRepository.GetMascota(userLoged.Token,empresaData.Prefijo, (string)mascotaNavigationData.IdMascota);
            var p = result[0];
            var r = await razaRepository.GetRaza(userLoged.Token,empresaData.Prefijo, (string)p.codEspecie, (string)p.codRaza);
            var x = r[0];
            Console.WriteLine("PANTALLA CERT SALUD \n");
            Console.WriteLine(p);
            Mascotas.IdMascota = p.idMascota;
            Mascotas.NombreMascota = p.nombreMascota;
            Mascotas.CodRaza = p.codRaza;
            Mascotas.CodSexo = p.codSexo;
            Mascotas.Raza = x.raza;
            Mascotas.CodColor = p.codColor;
            Mascotas.FechaNacimiento = p.fechaNacimiento;
            Mascotas.EstadoReproductivo = p.estadoReproductivo;
            Mascotas.Microchip = p.microchip;
            Mascotas.IdEstado = p.idEstado;
            Mascotas.FechaCreacion = p.fechaCreacion;
            Mascotas.CodEspecie = p.codEspecie;
            Mascotas.RutCliente = p.rutCliente;
            Mascotas.Especie = p.especie;
            Mascotas.Sexo = p.sexo;
            var resp = await propietarioRepository.GetPropietario(userLoged.Token, (string)mascotaNavigationData.RutCliente, empresaData.Prefijo);
            // Console.WriteLine(resp);
            dynamic bandera = resp;
            Propietario.Nombre = bandera.nombre;
            Propietario.Rut = Mascotas.RutCliente;
            Propietario.Email = bandera.email;
            Propietario.Direccion = bandera.direccion;
            Propietario.Fono = bandera.fono1;
            Propietario.Cupo = bandera.cupo;
            Propietario.Disponible = bandera.disponible;
            // Console.WriteLine($"bandera bloqueo: {bandera.bloqueo}");
            Propietario.Bloqueo = bandera.bloqueo == 0 ? false : true;
            // Console.WriteLine($"bloqueo: {Cliente.Bloqueo}");
            Propietario.Plazo = bandera.plazo;
            Propietario.CodComuna = bandera.codComuna;
            Rut rutfn = new Rut();
            RutFormato = rutfn.FormatoRut(Propietario.Rut);
            int años = DateTime.Now.Year - Convert.ToDateTime(Mascotas.FechaNacimiento).Year;
            int meses = DateTime.Now.Month - Convert.ToDateTime(Mascotas.FechaNacimiento).Month;
            if (meses < 0) meses = meses * -1;
            Edad = $"{años}a {meses}m";

            Medicos = await especialistaRepository.GetMedicos(userLoged.Token,empresaData.Prefijo, empresaData.Local);
            StateHasChanged();
            MaeEmpresasDatos = await datosTributariosRepository.GetDatos(userLoged.Token,empresaData.Prefijo,empresaData.Local);
        }


    }

    private async void ChangeEventMedico(ChangeEventArgs e)
    {

        string medicoSeleccionado = e.Value?.ToString();
        int codigo = int.Parse(medicoSeleccionado);
        Medico = await especialistaRepository.GetEspecialistaByCode(userLoged.Token,empresaData.Prefijo, empresaData.Local, codigo);

    }


    private void GeneraGlosas()
    {
        var rutfn = new Rut();
        string rut = rutfn.FormatoRut(Medico.Rut);
        Glosa1 = $"Con fecha {DateTime.Now.ToString("dd-MM-yyyy")}, El que suscribe, Medico Veterinario CI Nº {rut}, con domicilio comercial en calle ";
        Glosa1 += $"{MaeEmpresasDatos.Direccion} de la ciudad de {MaeEmpresasDatos.Comuna},  certifica que el {Mascotas.Especie}, {Mascotas.Sexo}, de {Edad}";
        Glosa1 += $" de edad, raza {Mascotas.Raza}, color {Mascotas.Color}, que responde al nombre de {Mascotas.NombreMascota}, de ";
        Glosa1 += $"propiedad de {Propietario.Nombre}, con domicilio en {Propietario.Direccion}. De la ciudad de {Propietario.CodComuna}, se encuentra con todas sus vacunas y antiparasitarios  ";
        Glosa1 += $"al día, correspondiente a su edad, no presentando signos de enfermedad infectocontagiosa detectable al exámen clínico general. ";
        Glosa2 = "Se extiende el presente certificado a petición del interesado válido para los fines que estime conveniente. ";
        StateHasChanged();
    }

    private void Imprimir()
    {
        ShowPrint = true;
        StateHasChanged();
    }
}